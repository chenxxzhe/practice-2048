!function(Q){function F(U){if(B[U])return B[U].exports;var I=B[U]={i:U,l:!1,exports:{}};return Q[U].call(I.exports,I,I.exports,F),I.l=!0,I.exports}var B={};F.m=Q,F.c=B,F.i=function(Q){return Q},F.d=function(Q,B,U){F.o(Q,B)||Object.defineProperty(Q,B,{configurable:!1,enumerable:!0,get:U})},F.n=function(Q){var B=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return F.d(B,"a",B),B},F.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},F.p="",F(F.s=2)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar game = {\n    // 游戏面板显示的数字， 一维数组储存\n    mat: [],\n    emptyTiles: [],\n    score: 0,\n    best: 0,\n    LEFT: 0,\n    DOWN: 1,\n    RIGHT: 2,\n    UP: 3,\n    // 历史状态记录，保存三条\n    _history: {\n        mat: [],\n        score: [],\n        best: []\n    },\n    // 上一步状态记录\n    _last: {\n        mat: [],\n        score: 0,\n        best: 0\n    },\n    _started: false,\n    _noNewNum: false,\n    onStart: null,\n    onMove: null,\n    onEmerge: null,\n    onGenNewNum: null,\n    onScore: null,\n    onGameOver: null\n};\n\nfunction reset(resetBest) {\n    game.mat = null;\n    game.emptyTiles = [];\n    game._started = false;\n    game.score = 0;\n    if (resetBest) {\n        game.best = 0;\n    }\n    game._history = {\n        mat: [],\n        score: [],\n        best: []\n    };\n    game._last = {\n        mat: [],\n        score: 0,\n        best: game.best\n    };\n    game._noNewNum = false;\n\n    if (isFunction(game.onScore)) {\n        game.onScore();\n    }\n}\n\nfunction initMat() {\n    game.mat = createFilledArr(0, 16);\n\n    updateEmptyTiles();\n\n    for (var i = 0, l = 2; i < l; i++) {\n        genNumInEmpty();\n    }\n}\n\nfunction updateEmptyTiles() {\n    game.emptyTiles = [];\n    game.mat.forEach(function (v, i) {\n        if (v === 0) {\n            game.emptyTiles.push(i);\n        }\n    });\n}\n\nfunction genNumInEmpty(pos) {\n    if (game._noNewNum) return false;\n    updateEmptyTiles();\n    var position;\n    if (pos) {\n        position = pos;\n    } else {\n        var randint = Math.floor(Math.random() * game.emptyTiles.length);\n        position = game.emptyTiles[randint];\n    }\n    var posIndex = game.emptyTiles.indexOf(position);\n    if (game.mat[position] || posIndex === -1) {\n        return false;\n    }\n\n    game.mat[position] = choice([2, 4]);\n    if (isFunction(game.onGenNewNum)) {\n        game.onGenNewNum(game.mat[position], position);\n    }\n    game.emptyTiles.splice(posIndex, 1);\n    return true;\n}\n\n// 开始新游戏\nfunction newGame(resetBest) {\n    reset(resetBest);\n    game._started = true;\n    initMat();\n    if (isFunction(game.onStart)) {\n        game.onStart();\n    }\n}\n\n// 得分\nfunction score(v) {\n    game.score += v;\n    game.best = Math.max(game.score, game.best);\n    if (isFunction(game.onScore)) {\n        game.onScore();\n    }\n}\n\n// 只有当没有空格，并且任意相邻的两格不相同才是gameOver\nfunction isGameOver() {\n    if (game.emptyTiles.length > 0) return false;\n    // 对每个位置只查右下两格是否相等\n    var flag = true;\n    for (var i = 0, l = 16; i < l; i++) {\n        if (Math.floor(i / 4) === 3) {\n            // 最后一行，最后一个\n            if (i % 4 === 3) continue;\n            if (game.mat[i] === game.mat[i + 1]) {\n                flag = false;\n                break;\n            }\n        } else if (i % 4 === 3) {\n            if (game.mat[i] === game.mat[i + 4]) {\n                flag = false;\n                break;\n            }\n        } else if (game.mat[i] === game.mat[i + 1] || game.mat[i] === game.mat[i + 4]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\n// 游戏结束\nfunction gameOver() {\n    // reset();\n    game._started = false;\n    if (isFunction(game.onGameOver)) {\n        game.onGameOver();\n    }\n}\n\n// 回撤三步\nfunction undo() {\n    if (!game._started) return false;\n    var history = game._history;\n    if (!history || history.mat.length === 0) {\n        return false;\n    }\n    game.mat = history.mat.pop();\n    game.score = history.score.pop();\n    game.best = history.best.pop();\n    if (isFunction(game.onScore)) {\n        game.onScore();\n    }\n\n    var last = game._last;\n    last.mat = game.mat.slice();\n    last.score = game.score;\n    last.best = game.best;\n    return true;\n}\n\n// 记录状态，用于undo\nfunction record() {\n    var last = game._last;\n    var hist = game._history;\n    // remember into history\n    if (last.mat.length !== 0) {\n        hist.mat.push(last.mat.slice());\n        hist.score.push(last.score);\n        hist.best.push(last.best);\n    }\n    if (hist.mat.length > 3) {\n        hist.mat.shift();\n        hist.score.shift();\n        hist.best.shift();\n    }\n    // record this step\n    last.mat = game.mat.slice();\n    last.score = game.score;\n    last.best = game.best;\n}\n\nfunction move(direction) {\n    if (!game._started) {\n        return;\n    }\n    var last = game.mat.slice();\n\n    // 先移动再判断是否有效移动或者GAME OVER\n    switch (direction) {\n        case game.RIGHT:\n            clockwiseTransform(game.mat);\n            clockwiseTransform(game.mat);\n            mergeToLeft(game.mat, onMove, onEmerge);\n            clockwiseTransform(game.mat);\n            clockwiseTransform(game.mat);\n            break;\n        case game.UP:\n            clockwiseTransform(game.mat, true);\n            mergeToLeft(game.mat, onMove, onEmerge);\n            clockwiseTransform(game.mat);\n            break;\n        case game.DOWN:\n            clockwiseTransform(game.mat);\n            mergeToLeft(game.mat, onMove, onEmerge);\n            clockwiseTransform(game.mat, true);\n            break;\n        case game.LEFT:\n            mergeToLeft(game.mat, onMove, onEmerge);\n            break;\n    }\n\n    // 首先检查是否有效移动\n    if (last.toString() === game.mat.toString()) {\n        // 然后检查emptyTiles还有没有元素\n        if (isGameOver()) {\n            // 无空格就gameOver\n            gameOver();\n        }\n        // 无效移动不做任何事。\n    } else {\n        genNumInEmpty();\n        record();\n    }\n\n    function onMove(v, newPos, lastPos) {\n        if (isFunction(game.onMove)) {\n            game.onMove(v, getOriginIndex(direction, newPos), getOriginIndex(direction, lastPos));\n        }\n    }\n\n    function onEmerge(v, newPos, lastPos) {\n        if (isFunction(game.onEmerge)) {\n            game.onEmerge(v, getOriginIndex(direction, newPos), getOriginIndex(direction, lastPos));\n        }\n    }\n}\n\n// 合并格子\nfunction mergeToLeft(matrix, onMove, onEmerge) {\n    var block = 0;\n    var mergeToNext = function mergeToNext(v, i) {\n        if (i % 4 === 0 || v === 0) {\n            return;\n        }\n        if (matrix[i - 1] === 0) {\n            matrix[i - 1] = v;\n            matrix[i] = 0;\n            // 移动后的回调\n            // 由于转置过，导致索引不对，因此要转置回去\n            // XXX: 应该有更好的处理方法\n            onMove(v, i - 1, i);\n            return mergeToNext(v, i - 1);\n        } else if (i === block) {\n            return;\n        } else if (matrix[i - 1] === v) {\n            matrix[i - 1] += v;\n            matrix[i] = 0;\n            // 避免一次移动中同一格多次合并\n            block = i;\n            // 合并的回调\n            onEmerge(matrix[i - 1], i - 1, i);\n            score(matrix[i - 1]);\n            return;\n        }\n    };\n\n    matrix.forEach(function (v, i) {\n        mergeToNext(v, i);\n    });\n}\n\n// 由转置后的索引映射到原本的索引\nfunction getOriginIndex(clockwiseTimes, index) {\n    var pos,\n        lastIndex = index;\n    for (var i = 0, l = clockwiseTimes; i < l; i++) {\n        pos = index2RowCol(lastIndex);\n        lastIndex = rowCol2Index(3 - pos.col, pos.row);\n    }\n    return lastIndex;\n}\n\nfunction clockwiseTransform(matrix, reverse) {\n    var temp = matrix.slice();\n    if (reverse) {\n        temp.forEach(function (v, i) {\n            var pos = index2RowCol(i),\n                newPos = rowCol2Index(3 - pos.col, pos.row);\n            matrix[newPos] = v;\n        });\n    } else {\n        temp.forEach(function (v, i) {\n            var pos = index2RowCol(i),\n                newPos = rowCol2Index(pos.col, 3 - pos.row);\n            matrix[newPos] = v;\n        });\n    }\n}\n\n// 一维数组的索引转为行列\nfunction index2RowCol(index) {\n    return {\n        row: Math.floor(index / 4),\n        col: index % 4\n    };\n}\n\n// 行列转为一维数组索引\nfunction rowCol2Index(row, col) {\n    return row * 4 + col;\n}\n\n// 使用行列来获取一维数组的值\nfunction getMatValByRowCol(mat, row, col) {\n    var index = rowCol2Index(row, col);\n    return mat[index];\n}\n\n// console\nfunction print() {\n    var str = '';\n    game.mat.forEach(function (v, i) {\n        str += (v || 0) + '\\t';\n        if (i % 4 === 3) {\n            str += '\\n';\n        }\n    });\n    return str;\n}\n\n// util\nfunction createFilledArr(data, size) {\n    var arr = [];\n    arr.length = size;\n    return arr.join(',').split(',').map(function () {\n        return data;\n    });\n}\n\nfunction choice(opts) {\n    var randomIndex = Math.floor(opts.length * Math.random());\n    return opts[randomIndex];\n}\n\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\n\ngame.move = move;\ngame.print = print;\ngame.createFilledArr = createFilledArr;\ngame.index2RowCol = index2RowCol;\ngame.rowCol2Index = rowCol2Index;\ngame.getMatValByRowCol = getMatValByRowCol;\ngame.genNumInEmpty = genNumInEmpty;\ngame.newGame = newGame;\ngame.reset = reset;\ngame.undo = undo;\ngame.isGameOver = isGameOver;\ngame.gameOver = gameOver;\n\nexports.default = game;//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbWFpbi5sZXNzP2FmODYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9hcHAvbWFpbi5sZXNzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _game = __webpack_require__(0);\n\nvar _game2 = _interopRequireDefault(_game);\n\n__webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// COOKIE 记录游戏状态\nfunction recordCookie() {\n    var status = {\n        mat: _game2.default.mat,\n        score: _game2.default.score,\n        best: _game2.default.best\n    };\n    document.cookie = 's=' + JSON.stringify(status);\n}\n\nfunction parseCookie() {\n    if (document.cookie.substring(0, 2) === 's=') {\n        var status = JSON.parse(document.cookie.substring(2));\n        _game2.default.mat = status.mat;\n        _game2.default.score = status.score;\n        _game2.default.best = status.best;\n        return true;\n    }\n    return false;\n}\n\nwindow.onload = function () {\n\n    var newGameBtn = document.getElementById('newGameBtn'),\n        undoBtn = document.getElementById('undoBtn'),\n        currentScore = document.getElementById('currentScore'),\n        bestScore = document.getElementById('bestScore'),\n        gameOverShade = document.querySelector('.game-over'),\n        gameOverModal = document.querySelector('.game-over-modal'),\n        tryAgainBtn = document.querySelector('.try-again'),\n        tileContainer = document.querySelector('.tile-container'),\n        gameBoard = document.querySelector('.gameboard');\n\n    newGameBtn.onclick = newGame;\n    undoBtn.onclick = undo;\n\n    _game2.default.onScore = function () {\n        currentScore.innerHTML = _game2.default.score;\n        bestScore.innerHTML = _game2.default.best;\n    };\n\n    _game2.default.onGameOver = function () {\n        showModal();\n        tryAgainBtn.onclick = function () {\n            newGame();\n            hideModal();\n        };\n    };\n    function showModal() {\n        gameOverShade.style.display = 'block';\n        gameOverModal.className += ' slide-in';\n    }\n    function hideModal() {\n        gameOverShade.style.display = 'none';\n        gameOverModal.className = 'game-over-modal';\n    }\n\n    // 监听按键\n    document.onkeydown = function (e) {\n        var move = [37, 38, 39, 40];\n        if (move.indexOf(e.keyCode) !== -1) {\n            var action = {\n                37: function _() {\n                    _game2.default.move(_game2.default.LEFT);\n                },\n                38: function _() {\n                    _game2.default.move(_game2.default.UP);\n                },\n                39: function _() {\n                    _game2.default.move(_game2.default.RIGHT);\n                },\n                40: function _() {\n                    _game2.default.move(_game2.default.DOWN);\n                }\n            };\n            action[e.keyCode]();\n            e.preventDefault();\n            // e.stopPropagation();\n            // e.returnValue = false;\n            recordCookie();\n        }\n    };\n\n    // 监听滑动\n    var touchStartClientX, touchStartClientY, touchEndClientX, touchEndClientY;\n    gameBoard.addEventListener('touchstart', function (e) {\n        // e.preventDefault();\n        if (event.targetTouches.length > 1) return; // 多于1个手指控制\n        touchStartClientX = e.touches[0].clientX;\n        touchStartClientY = e.touches[0].clientY;\n    });\n    gameBoard.addEventListener('touchmove', function (e) {\n        e.preventDefault();\n    });\n    gameBoard.addEventListener('touchend', function (e) {\n        if (event.targetTouches.length > 0) return; // 持续滑动\n        touchEndClientX = event.changedTouches[0].clientX;\n        touchEndClientY = event.changedTouches[0].clientY;\n        var dx = touchEndClientX - touchStartClientX;\n        var absDx = Math.abs(dx);\n        var dy = touchEndClientY - touchStartClientY;\n        var absDy = Math.abs(dy);\n        if (Math.max(absDx, absDy) > 10) {\n            if (absDx > absDy) {\n                if (dx > 0) _game2.default.move(_game2.default.RIGHT);else _game2.default.move(_game2.default.LEFT);\n            } else if (dy > 0) _game2.default.move(_game2.default.DOWN);else _game2.default.move(_game2.default.UP);\n        }\n    });\n\n    _game2.default.onStart = function () {\n        recordCookie();\n    };\n    _game2.default.onMove = function (v, newPos, lastPos) {\n        var tile = getTile(lastPos);\n        if (tile) {\n            tile.className = getTileClassName(v, newPos);\n        }\n    };\n\n    _game2.default.onEmerge = function (v, posIndex, removedPosIndex) {\n        var removedTile = getTile(removedPosIndex);\n        // 一定要在改className之前找到元素\n        var emergedTile = getTile(posIndex);\n        removedTile.className = getTileClassName(v, posIndex) + ' hide';\n        setTimeout(function () {\n            // 为了让动画完成\n            tileContainer.removeChild(removedTile);\n        }, 100);\n        emergedTile.innerHTML = v;\n        emergedTile.className = getTileClassName(v, posIndex);\n    };\n    _game2.default.onGenNewNum = function (v, posIndex) {\n        var tile = createTile(v, posIndex);\n        tile.className += ' fade-in';\n        tileContainer.appendChild(tile);\n    };\n\n    if (parseCookie()) {\n        resetTile();\n    }\n\n    function newGame() {\n        hideModal();\n        // 移动如何改变tile\n        tileContainer.innerHTML = '';\n        _game2.default.newGame();\n    }\n    function getTileClassName(value, pos) {\n        return ['tile', 'tile-' + value, getColorClassName(value), getPosClassName(pos)].join(' ');\n    }\n\n    function getPosClassName(pos) {\n        var posObj = _game2.default.index2RowCol(pos);\n        return 'tile-pos-' + posObj.row + '-' + posObj.col;\n    }\n    function getColorClassName(value) {\n        return 'tile-color-' + value;\n    }\n\n    function createTile(value, posIndex) {\n        var tile = document.createElement('div');\n        tile.className = getTileClassName(value, posIndex);\n        tile.innerHTML = value;\n        return tile;\n    }\n\n    function getTile(pos) {\n        var className = getPosClassName(pos);\n        return document.querySelector('.' + className);\n    }\n\n    function undo() {\n        if (_game2.default.undo()) {\n            resetTile();\n        }\n    }\n\n    function resetTile() {\n        _game2.default._started = true;\n        tileContainer.innerHTML = '';\n        var fragment = document.createDocumentFragment();\n        _game2.default.mat.forEach(function (v, i) {\n            if (v !== 0) {\n                fragment.appendChild(createTile(v, i));\n            }\n        });\n        tileContainer.appendChild(fragment);\n        _game2.default.onScore();\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,")}]);